version: '3.9'
services:
  auth:
    build:
      dockerfile: ./apps/auth/Dockerfile
      target: production
      context: .
    command: sh -c "npm run migration:auth"
    env_file:
     - ./apps/auth/.env
    expose:
      - 3001
    ports:
      - "3001:3001"
      - "5000:5000"
    depends_on:
      - redis
      - mongo
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - api

  accounting:
    build:
      dockerfile: ./apps/accounting/Dockerfile
      target: production
      context: .
    command: sh -c "npm run migration:accounting"
    expose:
      - 3002
    ports:
      - "3002:3002"
      - "5001:5001"
    depends_on:
      - redis
      - mongo
    volumes:
      - .:/app
      # @todo @vahidnejad add another container for node modules
      # only and share it between them
      - /app/node_modules
    networks:
      - api

    product:
      build:
        dockerfile: ./apps/product/Dockerfile
        target: production
        context: .
      command: sh -c "npm run migration:product"
      expose:
        - 3002
      ports:
        - "3003:3003"
        - "5002:5002"
      depends_on:
        - redis
        - mongo
      volumes:
        - .:/app
        # @todo @vahidnejad add another container for node modules
        # only and share it between them
        - /app/node_modules
      networks:
        - api

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    logging:
      options:
        max-size: 1g
      # @todo vahidnejad add authentication
    volumes:
      - ~/deps-storage/mongo_volume:/data/db
    networks:
      - api

  redis:
    image: redis:latest
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    restart: always
    container_name: redis
    volumes:
      - ~/deps-storage/redis_volume:/var/lib/redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379:6379
    networks:
      - api

networks:
  api:
    driver: bridge